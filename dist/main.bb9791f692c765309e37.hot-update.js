exports.id = "main";
exports.modules = {

/***/ "./routes/ingredients.js":
/*!*******************************!*\
  !*** ./routes/ingredients.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const express = __webpack_require__(/*! express */ \"express\");\nconst router = express.Router();\n\nconst ingredientValidator = __webpack_require__(/*! ../middlewares/ingredient.validator */ \"./middlewares/ingredient.validator.js\");\nconst roleAccess = __webpack_require__(/*! ../middlewares/roleAccess */ \"./middlewares/roleAccess.js\");\n\nconst { IngredientModel } = __webpack_require__(/*! ../db/db.module */ \"./db/db.module.js\");\n\nrouter.get('/', async (req, res, next) => {\n  const limit = +req.query.limit ? +req.query.limit : 10;\n  const offset = +req.query.offset ? +req.query.offset : 0;\n\n  try {\n    const { title, categoryId, sortBy, sortType } = req.query;\n\n    const params = {};\n\n    if (categoryId) {\n      const categoryIds = categoryId.split(',');\n      params.category = { $in: categoryIds };\n    }\n\n    if (title) {\n      params['$text'] = { $search: title };\n    }\n\n    const ingredients = await IngredientModel.find(params, '-__v')\n      .sort({\n        [sortBy]: sortType\n      })\n      .skip(offset)\n      .limit(limit)\n      .exec();\n\n    return res.json({\n      data: ingredients,\n      meta: {\n        limit,\n        offset\n      }\n    });\n  } catch (e) {\n    return res.status(500).json({ message: 'Что-то пошло не так =(' });\n  }\n});\n\nrouter.get('/:id', async (req, res, next) => {\n  try {\n    const id = req.params.id;\n    const ingredient = await IngredientModel.findById(id, '-__v').exec();\n\n    return res.json({\n      data: ingredient,\n      meta: null\n    });\n  } catch {\n    return res.status(500).json({ message: 'Что-то пошло не так =(' });\n  }\n});\n\nrouter.post(\n  '/',\n  roleAccess('admin'),\n  ingredientValidator,\n  async (req, res, next) => {\n    try {\n      const ingredient = await new IngredientModel(req.body).save();\n\n      return res.json({\n        data: ingredient,\n        meta: null\n      });\n    } catch (e) {\n      return res.status(500).json({ message: 'Что-то пошло не так =(' });\n    }\n  }\n);\n\nrouter.put(\n  '/:id',\n  roleAccess('admin'),\n  ingredientValidator,\n  async (req, res, next) => {\n    try {\n      const id = req.params.id;\n\n      await IngredientModel.findByIdAndUpdate(id, req.body).exec();\n      ingredient = await IngredientModel.findById(id, '-__v').exec();\n\n      return res.json({\n        data: ingredient,\n        meta: null\n      });\n    } catch (e) {\n      return res.status(500).json({ message: 'Что-то пошло не так =(' });\n    }\n  }\n);\n\nrouter.delete('/:id', roleAccess('admin'), async (req, res, next) => {\n  try {\n    const id = req.params.id;\n    await IngredientModel.deleteOne({ _id: id }).exec();\n\n    return res.status(500).json({ message: 'Ингредиент, удален.' });\n  } catch (e) {\n    console.log(e);\n    return res.status(500).json({ message: 'Что-то пошло не так =(' });\n  }\n});\n\nmodule.exports = router;\n\n\n//# sourceURL=webpack:///./routes/ingredients.js?");

/***/ })

};